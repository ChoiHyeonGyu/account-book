<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="board">
	<select id="usernameselect" parameterType="string" resultType="string">
		<![CDATA[
			select name from users where id = #{value}
		]]>
	</select>

	<insert id="boardinsert" parameterType="boardvo">
		<![CDATA[
			insert into board values(seq_board.nextval, #{id}, #{month}, #{title}, #{content}, #{name}, sysdate, 0, 0)
		]]>
	</insert>

	<select id="boardidselect" parameterType="boardvo" resultType="int">
		<![CDATA[
			select board_id from board where id = #{id} and month = #{month} and title = #{title} 
		]]>
		<if test="content != null and content != ''">
			<![CDATA[
				and content = #{content}
			]]>
		</if>
	</select>

	<insert id="imageinsert" parameterType="boardvo">
		<![CDATA[
			insert into picture values(#{photo}, #{boardId})
		]]>
	</insert>

	<select id="contentselect" parameterType="int" resultType="boardvo">
		<![CDATA[
			select board.board_id as boardId, board.*, picture.photo from board, picture where board.board_id = picture.board_id and board.board_id = #{value}
		]]>
	</select>

	<update id="boardupdate" parameterType="boardvo">
		<![CDATA[
			update board set month = #{month}, title = #{title}, content = #{content} where board_id = #{boardId}
		]]>
	</update>

	<select id="imageselect" parameterType="int" resultType="boardvo">
		<![CDATA[
			select photo from picture where board_id = #{value}
		]]>
	</select>

	<delete id="imagedelete" parameterType="int">
		<![CDATA[
			delete from picture where board_id = #{value}
		]]>
	</delete>

	<delete id="boarddelete" parameterType="int">
		<![CDATA[
			delete from board where board_id = #{value}
		]]>
	</delete>

	<select id="boardcount" parameterType="string" resultType="int">
		<![CDATA[
			select count(*) from board
		]]>
		<if test="_parameter != null and _parameter != ''">
			<![CDATA[
				where month like '%${_parameter}%' or title like '%${_parameter}%' or name like '%${_parameter}%'
			]]>
		</if>
	</select>

	<select id="getList" parameterType="map" resultType="boardvo">
    	<![CDATA[
			select * from (select a.*, rownum as rn from (select board_id as boardId, board.* from board 
		]]>
		<if test="keyword != null and keyword != ''">
			<![CDATA[					  
				where (month like '%${keyword}%' or title like '%${keyword}%' or name like '%${keyword}%') 
			]]>
		</if>
		<![CDATA[					  
			order by board.day desc) a) where (#{page}-1)*#{size}+1 <= rn and rn <= #{page}*#{size}
		]]>
	</select>
	
	<select id="commentsselect" parameterType="int" resultType="boardvo">
		<![CDATA[
			select comments.comment_id as commentId, comments.* from boardcomments, comments where boardcomments.comment_id = comments.comment_id and boardcomments.board_id = #{value}
		]]>
	</select>
	
	<insert id="commentinsert" parameterType="boardvo">
		<![CDATA[
			insert into comments values(seq_comments.nextval, #{id}, #{name}, sysdate, #{content}, '')
		]]>
	</insert>
	
	<select id="commentidselect" parameterType="boardvo" resultType="int">
		<![CDATA[
			select comment_id from comments where id = #{id} and content = #{content}
		]]>
	</select>
	
	<insert id="boardcommentsinsert" parameterType="boardvo">
		<![CDATA[
			insert into boardcomments values(#{boardId}, #{commentId})
		]]>
	</insert>
	
	<select id="replysselect" parameterType="int" resultType="boardvo">
		<![CDATA[
			select comments.comment_id as commentId, comments.* from comments where reply = #{value}
		]]>
	</select>
	
	<insert id="replyinsert" parameterType="boardvo">
		<![CDATA[
			insert into comments values(seq_comments.nextval, #{id}, #{name}, sysdate, #{content}, #{commentId})
		]]>
	</insert>
	
	<delete id="boardcommentsdelete" parameterType="int">
		<![CDATA[
			delete from boardcomments where comment_id = #{value}
		]]>
	</delete>
	
	<delete id="commentdelete" parameterType="int">
		<![CDATA[
			delete from comments where comment_id = #{value} or reply = #{value}
		]]>
	</delete>
	
	<update id="hit" parameterType="int">
		update board set hit = hit + 1 where board_id = #{value}
	</update>
	
	<select id="gdselect" parameterType="boardvo" resultType="int">
		<![CDATA[
			select count(*) from GD where board_id = #{boardId} and id = #{id}
		]]>
	</select>
	
	<insert id="gdinsert" parameterType="boardvo">
		<![CDATA[
			insert into GD values(#{boardId}, #{id})
		]]>
	</insert>
	
	<delete id="gddelete" parameterType="int">
		<![CDATA[
			delete from GD where board_id = #{value}
		]]>
	</delete>
	
	<update id="good" parameterType="int">
		<![CDATA[
			update board set good = good + 1 where board_id = #{value}
		]]>
	</update>
	
	<select id="graphmonthselect" parameterType="string" resultType="graphvo">
		<![CDATA[
			select count(*) as cnt, category from list where id = #{value} and day between trunc(add_months(sysdate, -1), 'mm') and trunc(sysdate, 'mm') -1/86400 group by category
		]]>
	</select>
	
	<select id="graphyearselect" parameterType="string" resultType="graphvo">
		<![CDATA[
			select count(*) as cnt, category from list where id = #{value} and day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy') -1/86400 group by category
		]]>
	</select>
	
	<select id="graphavgdefaultselect" parameterType="string" resultType="graphvo">
		<![CDATA[
			select sum(cnt) as cnt, category from (select count(*) as cnt, c.category as category from (select id from (select gender, age from users where id = #{value}) a, 
			users where users.gender = a.gender and users.age = a.age) b, list, category c where b.id = list.id and list.operations = '-' and list.category = c.category and c.slave_id = 0 
			and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c.category union all
			select count(*) as cnt, c2.category as category from (select id from (select gender, age from users where id = #{value}) a, 
			users where users.gender = a.gender and users.age = a.age) b, list, category c1, category c2 where b.id = list.id and list.operations = '-' and list.category = c1.category 
			and c1.slave_id = c2.category_id and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c2.category) 
			group by category order by cnt desc
		]]>
	</select>
	
	<select id="transgraphavgselect" parameterType="uservo" resultType="graphvo">
		<![CDATA[
			select sum(cnt) as cnt, category from (select count(*) as cnt, c.category as category from (select id from 
			users where gender = #{gender} and age = #{age}) b, list, category c where b.id = list.id and list.operations = '-' and list.category = c.category and c.slave_id = 0 
			and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c.category union all
			select count(*) as cnt, c2.category as category from (select id from 
			users where gender = #{gender} and age = #{age}) b, list, category c1, category c2 where b.id = list.id and list.operations = '-' and list.category = c1.category 
			and c1.slave_id = c2.category_id and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c2.category) 
			group by category order by cnt desc
		]]>
	</select>
	
	<select id="transgraphavgselect1" parameterType="string" resultType="graphvo">
		<![CDATA[
			select sum(cnt) as cnt, category from (select count(*) as cnt, c.category as category from (select id from (select gender, age from users where gender = #{value}) a, 
			users where users.gender = a.gender and users.age = a.age) b, list, category c where b.id = list.id and list.operations = '-' and list.category = c.category and c.slave_id = 0 
			and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c.category union all
			select count(*) as cnt, c2.category as category from (select id from (select gender, age from users where gender = #{value}) a, 
			users where users.gender = a.gender and users.age = a.age) b, list, category c1, category c2 where b.id = list.id and list.operations = '-' and list.category = c1.category 
			and c1.slave_id = c2.category_id and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c2.category) 
			group by category order by cnt desc
		]]>
	</select>
	
	<select id="transgraphavgselect2" parameterType="string" resultType="graphvo">
		<![CDATA[
			select sum(cnt) as cnt, category from (select count(*) as cnt, c.category as category from (select id from (select gender, age from users where age = #{value}) a, 
			users where users.gender = a.gender and users.age = a.age) b, list, category c where b.id = list.id and list.operations = '-' and list.category = c.category and c.slave_id = 0 
			and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c.category union all
			select count(*) as cnt, c2.category as category from (select id from (select gender, age from users where age = #{value}) a, 
			users where users.gender = a.gender and users.age = a.age) b, list, category c1, category c2 where b.id = list.id and list.operations = '-' and list.category = c1.category 
			and c1.slave_id = c2.category_id and list.day between trunc(sysdate, 'yy') and trunc(add_months(sysdate, 12), 'yy')-1/86400 group by c2.category) 
			group by category order by cnt desc
		]]>
	</select>
	
	<select id="limitgraphselect" parameterType="string" resultType="graphvo">
		<![CDATA[
			select * from (select category, money_limit as ml from category c, userscategory uc where c.category_id = uc.category_id and id = #{value}) a,
			(select category, sum(money) as lsum from list where id = #{value} and day between trunc(sysdate, 'mm') and trunc(add_months(sysdate, 1), 'mm') -1/86400 and operations = '-'
			group by category) b where a.category = b.category
		]]>
	</select>
	
	<select id="movelimitgraphselect" parameterType="map" resultType="graphvo">
		<![CDATA[
			select * from (select category, money_limit as ml from category c, userscategory uc where c.category_id = uc.category_id and id = #{id}) a,
			(select category, sum(money) as lsum from list where id = #{id} and day between trunc(add_months(sysdate, #{operation}), 'mm') and 
			trunc(add_months(sysdate, #{operation}+1), 'mm') -1/86400 and operations = '-' group by category) b where a.category = b.category
		]]>
	</select>
	
	<!-- String에서 숫자만 뽑아내기 translate(money, '0123456789' || money, '0123456789') -->
	
	<select id="importgraphselect" parameterType="string" resultType="graphvo">
		<![CDATA[
			select sum(money) as lsum, category, day as day1 from list where id = #{value} and operations = '+'
			and day between trunc(add_months(sysdate, -12), 'mm') and trunc(sysdate, 'dd') group by category, day order by day
		]]>
	</select>
</mapper>